"use client";

import React, { useState } from "react";

export type Album = {
  title: string;
  year: number | null;
  image: string;
  listenHere?: string[];
};

type Props = {
  albums: Album[];
};

function Carousel({ albums }: Props) {
  const [albumData, setAlbumData] = useState<Album>({
    title: "Albums",
    year: null,
    image: albums[0].image || "",
    listenHere: [],
  });

  return (
    <article className="container mx-auto">
      <div
        className="w-full overflow-x-scroll"
        style={{ scrollbarWidth: "thin" }}
      >
        <ul className="flex w-fit min-w-full items-center justify-center gap-10 bg-pink-300 p-8">
          {albums.map((album, idx) => (
            <li key={idx}>
              <AlbumCard
                currentTitle={albumData.title}
                album={album}
                handleAlbumChange={setAlbumData}
              />
            </li>
          ))}
        </ul>
      </div>

      <div className="mb-[5px]">
        <h3 className="bg-neutral-800 py-4 text-center text-2xl text-white">
          {albumData.title && albumData.year
            ? `${albumData.title} - [${albumData.year}]`
            : "Albums"}
        </h3>
      </div>

      <nav className="bg-pink-300 py-3">
        <ul className="mt-4 flex items-center justify-center gap-20">
          <ListenAtSVGIcon name="Spotify" link="#">
            <path d="M29.8333 18.1666C24.5 15 15.5833 14.6666 10.5 16.25C9.66667 16.5 8.83334 16 8.58334 15.25C8.33334 14.4166 8.83334 13.5833 9.58334 13.3333C15.5 11.5833 25.25 11.9166 31.4167 15.5833C32.1667 16 32.4167 17 32 17.75C31.5833 18.3333 30.5833 18.5833 29.8333 18.1666ZM29.6667 22.8333C29.25 23.4166 28.5 23.6666 27.9167 23.25C23.4167 20.5 16.5833 19.6666 11.3333 21.3333C10.6667 21.5 9.91667 21.1666 9.75 20.5C9.58334 19.8333 9.91667 19.0833 10.5833 18.9166C16.6667 17.0833 24.1667 18 29.3333 21.1666C29.8333 21.4166 30.0833 22.25 29.6667 22.8333ZM27.6667 27.4166C27.3333 27.9166 26.75 28.0833 26.25 27.75C22.3333 25.3333 17.4167 24.8333 11.5833 26.1666C11 26.3333 10.5 25.9166 10.3333 25.4166C10.1667 24.8333 10.5833 24.3333 11.0833 24.1666C17.4167 22.75 22.9167 23.3333 27.25 26C27.8333 26.25 27.9167 26.9166 27.6667 27.4166ZM20 3.33331C17.8113 3.33331 15.644 3.76441 13.6219 4.60199C11.5999 5.43957 9.76253 6.66722 8.21489 8.21487C5.08928 11.3405 3.33334 15.5797 3.33334 20C3.33334 24.4203 5.08928 28.6595 8.21489 31.7851C9.76253 33.3327 11.5999 34.5604 13.6219 35.398C15.644 36.2355 17.8113 36.6666 20 36.6666C24.4203 36.6666 28.6595 34.9107 31.7851 31.7851C34.9107 28.6595 36.6667 24.4203 36.6667 20C36.6667 17.8113 36.2356 15.644 35.398 13.6219C34.5604 11.5998 33.3328 9.76251 31.7851 8.21487C30.2375 6.66722 28.4002 5.43957 26.3781 4.60199C24.356 3.76441 22.1887 3.33331 20 3.33331Z" />
          </ListenAtSVGIcon>

          <ListenAtSVGIcon name="Youtube" link="#">
            <path d="M16.6667 25L25.3167 20L16.6667 15V25ZM35.9333 11.95C36.15 12.7333 36.3 13.7833 36.4 15.1166C36.5167 16.45 36.5667 17.6 36.5667 18.6L36.6667 20C36.6667 23.65 36.4 26.3333 35.9333 28.05C35.5167 29.55 34.55 30.5166 33.05 30.9333C32.2667 31.15 30.8333 31.3 28.6333 31.4C26.4667 31.5166 24.4833 31.5666 22.65 31.5666L20 31.6666C13.0167 31.6666 8.66667 31.4 6.95 30.9333C5.45 30.5166 4.48333 29.55 4.06667 28.05C3.85 27.2666 3.7 26.2166 3.6 24.8833C3.48333 23.55 3.43333 22.4 3.43333 21.4L3.33333 20C3.33333 16.35 3.6 13.6666 4.06667 11.95C4.48333 10.45 5.45 9.48331 6.95 9.06665C7.73333 8.84998 9.16667 8.69998 11.3667 8.59998C13.5333 8.48331 15.5167 8.43331 17.35 8.43331L20 8.33331C26.9833 8.33331 31.3333 8.59998 33.05 9.06665C34.55 9.48331 35.5167 10.45 35.9333 11.95Z" />
          </ListenAtSVGIcon>

          <ListenAtSVGIcon name="SoundCloud" link="#">
            <path d="M19.2667 14.7833V28.3333H33.8667C36.95 28.1166 38.3333 26.2166 38.3333 23.8833C38.3333 21.4166 36.4667 19.4333 33.9667 19.4333C33.3333 19.4333 32.8 19.5666 32.25 19.8C31.85 15.9 28.5333 12.85 24.45 12.85C22.5 12.85 20.65 13.5833 19.2667 14.7833ZM17.8 16.4833C17.3 16.1833 16.7667 15.95 16.1833 15.8333V28.3333H18.5V15.5666C18.25 15.8333 18.0167 16.1666 17.8 16.4833ZM13.8833 15.5833V28.3333H15.4167V15.6333C15.1 15.5833 14.7833 15.5666 14.45 15.5666C14.25 15.5666 14.0667 15.5666 13.8833 15.5833ZM10.8333 16.6666V28.3333H12.35V15.9C11.8 16.0833 11.2833 16.35 10.8333 16.6666ZM8.05 20.8333C7.95 20.8333 7.85 20.7333 7.73333 20.6833V28.3333H9.26667V18.1C8.65 18.9 8.23334 19.85 8.05 20.8333ZM4.65 20.3666V28.1833C5 28.2833 5.4 28.3333 5.83333 28.3333H6.2V20.2333C6.06667 20.2166 5.93333 20.2 5.83333 20.2C5.4 20.2 5 20.2666 4.65 20.3666ZM1.66667 24.2666C1.66667 25.5166 2.23333 26.6166 3.11667 27.3666V21.1833C2.23333 21.9166 1.66667 23.0333 1.66667 24.2666Z" />
          </ListenAtSVGIcon>

          <ListenAtSVGIcon name="Apple" link="#">
            <g clipPath="url(#clip0_41_56)">
              <path d="M39.99 10.2067C40.0029 8.97842 39.8686 7.75302 39.59 6.55669C39.0617 4.37336 37.82 2.70669 35.9567 1.48502C35.0062 0.874741 33.9421 0.463144 32.8283 0.275024C31.9669 0.126683 31.0956 0.0431153 30.2217 0.0250236C30.155 0.0200236 30.0833 0.00835693 30.015 0.00335693H9.97667C9.72333 0.0200236 9.47167 0.0316903 9.21833 0.0466903C7.97333 0.118357 6.735 0.25169 5.56333 0.713357C3.33667 1.59669 1.73 3.13336 0.788333 5.34669C0.468333 6.09336 0.301667 6.88836 0.183333 7.69336C0.0912078 8.3453 0.0355656 9.00188 0.0166667 9.66002C0.0166667 9.71336 0.005 9.76336 0 9.81502V30.1867C0.0166667 30.42 0.0283333 30.6584 0.045 30.8934C0.128333 32.2517 0.301667 33.6 0.873333 34.8484C1.95667 37.215 3.77 38.77 6.26333 39.5167C6.96333 39.7284 7.69 39.8284 8.41833 39.8967C9.34333 39.985 10.2683 39.9967 11.1967 39.9967H29.58C30.4549 39.9961 31.3288 39.9405 32.1967 39.83C33.5667 39.6534 34.8567 39.2467 36.0217 38.48C37.4034 37.5868 38.4929 36.3079 39.155 34.8017C39.465 34.1017 39.6433 33.3517 39.7717 32.595C39.96 31.47 40.0017 30.3317 40 29.195C39.9967 22.8617 40 16.5367 39.995 10.2067H39.99ZM29.285 16.8567V26.3767C29.285 27.0717 29.1883 27.755 28.8783 28.3867C28.395 29.37 27.6117 29.99 26.565 30.2867C25.9817 30.4534 25.3883 30.5484 24.7817 30.575C23.1983 30.65 21.8267 29.575 21.5433 28.015C21.4243 27.3415 21.529 26.6475 21.8414 26.039C22.1538 25.4305 22.6567 24.9409 23.2733 24.645C23.8117 24.3784 24.39 24.2284 24.97 24.105C25.6 23.9684 26.2333 23.85 26.86 23.705C27.3167 23.6 27.6217 23.3217 27.71 22.845C27.7326 22.7393 27.7438 22.6315 27.7433 22.5234C27.7433 19.4984 27.7433 16.4734 27.74 13.4517C27.7389 13.3475 27.7243 13.2438 27.6967 13.1434C27.63 12.8934 27.4467 12.7384 27.19 12.7534C26.9233 12.77 26.66 12.8117 26.3983 12.8634C25.1317 13.1134 23.865 13.3684 22.5983 13.6234L18.7233 14.4067L16.4333 14.87C16.4067 14.875 16.38 14.8867 16.3533 14.8917C15.8917 15.02 15.725 15.23 15.7033 15.7084C15.7 15.7784 15.7033 15.8517 15.7033 15.925C15.7 20.2617 15.7033 24.5984 15.6983 28.9334C15.6983 29.6334 15.62 30.3267 15.34 30.9784C14.8767 32.045 14.0567 32.7117 12.95 33.0334C12.3667 33.2 11.7667 33.3 11.1583 33.32C9.55833 33.38 8.23333 32.32 7.95833 30.7467C7.725 29.3934 8.34167 27.9384 9.88167 27.2884C10.4767 27.0384 11.0983 26.9017 11.7283 26.7717C12.2067 26.6717 12.6867 26.5784 13.1617 26.4767C13.8 26.3384 14.1333 25.9384 14.1617 25.2867V25.0367C14.1617 20.1034 14.1617 15.1667 14.165 10.2334C14.165 10.0284 14.1867 9.81669 14.235 9.61669C14.3517 9.14169 14.69 8.87002 15.145 8.75336C15.57 8.64336 16.0033 8.56669 16.435 8.47836C17.6567 8.22836 18.8783 7.98502 20.1017 7.73836L23.885 6.97169C25.0017 6.74836 26.1183 6.52169 27.235 6.30002C27.6017 6.22836 27.9717 6.15336 28.34 6.12336C28.8567 6.08169 29.2117 6.40669 29.2633 6.92669C29.2767 7.04836 29.2833 7.17336 29.2833 7.29836C29.2867 10.4817 29.2867 13.6684 29.2833 16.8517L29.285 16.8567Z" />
            </g>
            <defs>
              <clipPath id="clip0_41_56">
                <rect width="40" height="40" />
              </clipPath>
            </defs>
          </ListenAtSVGIcon>
        </ul>
      </nav>
    </article>
  );
}

type AlbumProps = {
  album: Album;
  handleAlbumChange: React.Dispatch<React.SetStateAction<Album>>;
  currentTitle?: string;
};

function AlbumCard({ album, handleAlbumChange, currentTitle }: AlbumProps) {
  const { title, year, image, listenHere } = album;

  function handleMouseEnter() {
    handleAlbumChange({
      title,
      year,
      image,
      listenHere,
    });
  }

  return (
    <div
      className={`w-60 aspect-square bg-cover z-10 shadow-pink-500 shadow-lg cursor-pointer ease-in-out duration-300 ${
        title == currentTitle
          ? "scale-110 border-8 border-neutral-800 shadow-inner shadow-neutral-700"
          : ""
      }`}
      style={{ backgroundImage: `url(${image})` }}
      onMouseEnter={handleMouseEnter}
    ></div>
  );
}

type ListenIconProps = {
  name: string;
  link: string;
  children: React.ReactNode;
};

function ListenAtSVGIcon({ name, link, children }: ListenIconProps) {
  const [isHovered, setIsHovered] = useState(false);
  return (
    <li
      className="fill-neutral-800 hover:cursor-pointer"
      onMouseEnter={() => setIsHovered(true)}
      onMouseLeave={() => setIsHovered(false)}
    >
      <a href={link}>
        <figure>
          <svg
            className="mx-auto origin-bottom hover:scale-150 transition-transform duration-100 ease-out"
            width="40"
            height="40"
            viewBox="0 0 40 40"
            xmlns="http://www.w3.org/2000/svg"
          >
            {children}
          </svg>
          <figcaption
            className={`text-sm mt-1 ${isHovered ? "underline" : ""}`}
          >
            {name}
          </figcaption>
        </figure>
      </a>
    </li>
  );
}

export default Carousel;
